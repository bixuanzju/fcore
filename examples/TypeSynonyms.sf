type Pair[A, B] = (A, B) in
type PairInt[A] = Pair[(Int, A)] in

type Point2D[A] = { x : A, y : A } in
type Point3D[A] = { x : A, y : A, z : A } in

let diff (p : Point2D[Int]) (q : Point2D[Int]) = (q.x - p.x, q.y - p.y) in

let red = (255,0,0) and blue = (0,0,255) in
let origin = { x = 0, y = 0 } and vertex = { x = 6, y = 4 } in
(diff (origin ,, { c = red }) (vertex ,, { c = blue }))._1
