-- http://homepages.inf.ed.ac.uk/wadler/papers/prettier/prettier.pdf
type Doc[A] = {
  concat : A -> A -> A,
  nil    : A,
  text   : String -> A
};
let printAlg: Doc[String] = {
  concat = \(x: String) (y: String) -> x.concat(y),
  nil    = "",
  text   = \(x: String) -> x
} in
let parens [A] (f: Doc[A]) (doc: A) = f.concat (f.concat (f.text "(") doc) (f.text ")") in
let hello [A] (f: Doc[A]) = f.concat (f.text "Hello") (f.text ", world!") in
parens [String] printAlg (hello [String] printAlg) -- "(Hello, world)"
