let rec
  filter [A] (f:A->Bool) (xs:List[A]) :List[A] =
    if(null [A] xs)
    then
        Nil [A]
    else if(f (head [A] xs))
    then
        Cons [A] (head [A] xs) (filter [A] f (tail [A] xs))
    else
        filter [A] f (tail [A] xs) in

let  f(x:Int):Bool = x >0 in

head [Int] (filter [Int] f (L[-1,0,1,2,3]))
