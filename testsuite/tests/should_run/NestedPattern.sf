--> 1

data BTree [A,B] = Leaf A
                 | Node BTree[A,B] B BTree[A,B]
                  in

let children [A,B] (x:BTree [A,B]) =
    case x of
        Leaf _ -> -1
      | Node (Leaf _) _ (Leaf _) -> 0
      | Node _ _ (Leaf _) -> 1
      | Node (Leaf _) _ _ -> 1
      | Node _ _ _ -> 2
in

let tree = Node[Int,Int] (Leaf[Int,Int] 2) 1 (Node[Int,Int] (Leaf[Int,Int] 4) 3 (Leaf[Int,Int] 5)) in
children [Int,Int] tree
